<img src="https://raw.github.com/BlissRoms/platform_manifest/new-mm6.0/bliss-logo.png">

Download the Bliss-x86 source code, based on [Android-x86](http://www.android-x86.org)

Usage and Installation instructions can be found on our [XDA thread](https://forum.xda-developers.com/android/software/x86-bliss-x86-pc-s-t3534657)
---------------------------------------------------

Please read the [AOSP building instructions](http://source.android.com/source/index.html) before proceeding.

-----------------------
What you need to build [Bliss-x86](https://github.com/BlissRoms-x86/manifest)
-----------------------

    Latest Ubuntu LTS Releases https://www.ubuntu.com/download/server
    Decent CPU (Dual Core or better for a faster performance)
    8GB RAM (16GB for Virtual Machine)
    250GB Hard Drive (about 170GB for the Repo and then building space needed)
  
-----------------------

Installing Java 8

    sudo add-apt-repository ppa:openjdk/ppa
    sudo apt-get update && upgrade
    sudo apt-get install openjdk-8-jdk
    update-alternatives --config java  (make sure Java 8 is selected)
    update-alternatives --config javac (make sure Java 8 is selected)
    reboot
    
-----------------------

Grabbing Dependencies
-----------------------

    $ sudo apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386  lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip squashfs-tools python-mako libssl-dev ninja-build lunzip syslinux syslinux-utils gettext genisoimage gettext bc

Initializing Repository
-----------------------

Repo initialization:

    $ repo init -u https://github.com/BlissRoms-x86/manifest.git -b o8.0-x86


sync repo :

    $ repo sync --no-tags --no-clone-bundle
    
problems syncing? :    

    $ repo sync --no-tags --no-clone-bundle --force-sync
    
***

Building
--------

After the sync is finished, please read the [Building the image instructions from the Android-x86 site](http://www.android-x86.org/getsourcecode) on how to build.

For 32 bit userspace:

    $ . build/envsetup.sh
   
    $ lunch bliss_android_x86-userdebug
   
    $ mka iso_img

For 64 bit userspace:

    $ . build/envsetup.sh
   
    $ lunch bliss_android_x86_64-userdebug
   
    $ mka iso_img

If you would like to make a UEFI .img file:
   
    $ mka efi_img

If you get errors while building the kernel (like `recipe for target 'silentoldconfig' failed`), try cleaning the output directory, then building the kernel with a single thread:

    $ make clean
    $ make kernel -j1 && make iso_img
